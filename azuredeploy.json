{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "customerName": {
            "type": "string",
            "metadata": {
                "description": "Name of Customer"
            }
        },
        "environment": {
            "type": "string",
            "metadata": {
                "description": "Customers Environment"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "srcIPInboundNSG": {
            "defaultValue": "0.0.0.0/0",
            "type": "String",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT)"
            }
        },
        "virtualNetworkAddressPrefixes": {
            "defaultValue": "[array('192.168.0.0/16')]",
            "type": "Array",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "subnet0Prefix": {
            "defaultValue": "192.168.0.0/24",
            "type": "String",
            "metadata": {
                "description": "Mgmt subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "defaultValue": "192.168.1.0/24",
            "type": "String",
            "metadata": {
                "description": "Outside subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "defaultValue": "192.168.2.0/24",
            "type": "String",
            "metadata": {
                "description": "Inside subnet CIDR"
            }
        },
        "imageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "latest",
                "10.1.0",
                "10.0.6",
                "9.1.10"
            ],
            "type": "String",
            "metadata": {
                "description": "Version number of VM-Series VM in the Azure portal"
            }
        },
        "imageSku": {
            "defaultValue": "byol",
            "type": "string",
            "metadata": {
                "description": "BYOL or PAYG"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_F8s_v2",
            "allowedValues": [
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D4_v3",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_F8s_v2",
                "Standard_F32s_v2",
                "Standard_D8_v4",
                "Standard_D16_v4",
                "Standard_D8s_v4",
                "Standard_D16s_v4"
            ],
            "type": "String",
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "authenticationType": {
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "type": "String",
            "metadata": {
                "description": "Type of administrator user authentication "
            }
        },
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username of the administrator account of VM-Series"
            }
        },
        "adminPasswordOrKey": {
            "type": "SecureString",
            "metadata": {
                "description": "Password or ssh key for the administrator account of VM-Series."
            }
        },
        "customData": {
            "defaultValue": "echo customData",
            "type": "String",
            "metadata": {
                "description": "String passed down to the Virtual Machine."
            }
        },
        "bootstrap": {
            "defaultValue": "no",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Pass bootstrap data to VM"
            }
        }
    },
    "functions": [],
    "variables": {
        "imagePublisher": "paloaltonetworks",
        "imageOffer": "vmseries-flex",
        "publicIPName1": "[concat(parameters('customerName'), '-pip-fw-mgmt-', parameters('environment'), '-', parameters('location'),'-000' )]",
        "publicIPName2": "[concat(parameters('customerName'), '-pip-fw-outside-', parameters('environment'), '-', parameters('location'),'-000' )]",
        "nsgName": "[concat(parameters('customerName'), '-nsg-default-', parameters('environment'), '-', parameters('location'), '-000')]",
        "virtualNetworkAddressPrefix": "[parameters('virtualNetworkAddressPrefixes')[0]]",
        "virtualNetworkName": "[concat(parameters('customerName'), '-vnet-transit-', parameters('environment'), '-', parameters('location'), '-000')]",
        "subnet0Name": "[concat(parameters('customerName'), '-snet-mgmt-', parameters('environment'), '-', parameters('location'), '-000')]",
        "subnet1Name": "[concat(parameters('customerName'), '-snet-outside-', parameters('environment'), '-', parameters('location'), '-000')]",
        "subnet2Name": "[concat(parameters('customerName'), '-snet-inside-', parameters('environment'), '-', parameters('location'), '-000')]",
        "nic0Name": "[concat(parameters('customerName'), '-nic-fw-mgmt-', parameters('environment'), '-', parameters('location'), '-000')]",
        "nic1Name": "[concat(parameters('customerName'), '-nic-fw-outside-', parameters('environment'), '-', parameters('location'), '-000')]",
        "nic2Name": "[concat(parameters('customerName'), '-nic-fw-inside-', parameters('environment'), '-', parameters('location'), '-000')]",
        "vmName": "[concat(parameters('customerName'), '-fw-palo-', parameters('environment'), '-', parameters('location'), '-000')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "name": "[variables('publicIPName1')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-08-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[variables('publicIPName1')]"
                }
            }
        },
        {
            "name": "[variables('publicIPName2')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-08-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "zones": [
                "1",
                "2",
                "3"
            ],
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[variables('publicIPName2')]"
                }
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Outside-From-IP",
                        "properties": {
                            "description": "Rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Intra",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[variables('virtualNetworkAddressPrefix')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Default-Deny",
                        "properties": {
                            "description": "Default-Deny if we don't match Allow rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefixes')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet0Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[variables('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('nic0Name')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName1'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName1'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet0Name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('nic1Name')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName2'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "enableIPForwarding": true,
                            "enableAcceleratedNetworking": "[if(equals(parameters('imageVersion'), '8.1.9'), 'false', 'true')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName2'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet1Name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('nic2Name')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "enableIPForwarding": true,
                            "enableAcceleratedNetworking": "[if(equals(parameters('imageVersion'), '8.1.9'), 'false', 'true')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnet2Name'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName1'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName2'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
                "[concat(variables('nic0Name'), '0')]",
                "[concat(variables('nic1Name'), '1')]",
                "[concat(variables('nic2Name'), '2')]"
            ],
            "plan": {
                "name": "[parameters('imageSku')]",
                "product": "[variables('imageOffer')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                    "customData": "[if(equals(parameters('bootstrap'), 'no'), json('null'), base64(parameters('customData')))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic0Name'),'0'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic1Name'),'1'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nic2Name'),'2'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {}
}